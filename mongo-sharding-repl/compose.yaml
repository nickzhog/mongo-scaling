version: '3'
services:

  pymongo_api:
    container_name: pymongo_api
    build:
      context: api_app
      dockerfile: Dockerfile
    image: kazhem/pymongo_api:1.0.0
    depends_on:
      - mongos_router
    networks:
      app-network:
        ipv4_address: 173.17.0.13
    ports:
      - 8080:8080
    environment:
      MONGODB_URL: "mongodb://mongos_router:27020/somedb"
      MONGODB_DATABASE_NAME: "somedb"

  configSrv:
    image: mongo:latest
    container_name: configSrv
    restart: always
    ports:
      - "27017:27017"
    networks:
      app-network:
        ipv4_address: 173.17.0.12
    command: [ "--configsvr", "--replSet", "config_server", "--bind_ip_all", "--port", "27017" ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  configSrv2:
    image: mongo:latest
    container_name: configSrv2
    restart: always
    ports:
      - "28017:27017"
    networks:
      app-network:
        ipv4_address: 173.17.0.122
    command: [ "--configsvr", "--replSet", "config_server", "--bind_ip_all", "--port", "27017" ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  mongos_router:
    image: mongo:latest
    container_name: mongos_router
    restart: always
    ports:
      - "27020:27020"
    networks:
      app-network:
        ipv4_address: 173.17.0.11
    command: [ "mongos", "--configdb", "config_server/configSrv:27017,configSrv2:27017", "--bind_ip_all", "--port", "27020" ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  mongos_router2:
    image: mongo:latest
    container_name: mongos_router2
    restart: always
    ports:
      - "28020:27020"
    networks:
      app-network:
        ipv4_address: 173.17.0.111
    command: [ "mongos", "--configdb", "config_server/configSrv:27017,configSrv2:27017", "--bind_ip_all", "--port", "27020" ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  # shard1
  mongodb-shard1-master:
    image: mongo:latest
    container_name: mongodb-shard1-master
    restart: always
    ports:
      - "27117:27017"
    networks:
      app-network:
        ipv4_address: 173.17.0.10
    command: [ "--shardsvr", "--replSet", "rs-shard1", "--bind_ip_all", "--port", "27017" ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  mongodb-shard1-replica1:
    image: mongo:latest
    container_name: mongodb-shard1-replica1
    restart: always
    ports:
      - "27118:27018"
    networks:
      app-network:
        ipv4_address: 173.17.0.9
    command: [ "--shardsvr", "--replSet", "rs-shard1", "--bind_ip_all", "--port", "27018" ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  mongodb-shard1-replica2:
    image: mongo:latest
    container_name: mongodb-shard1-replica2
    restart: always
    ports:
      - "27119:27019"
    networks:
      app-network:
        ipv4_address: 173.17.0.8
    command: [ "--shardsvr", "--replSet", "rs-shard1", "--bind_ip_all", "--port", "27019" ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  # shard2
  mongodb-shard2-master:
    image: mongo:latest
    container_name: mongodb-shard2-master
    restart: always
    ports:
      - "27217:27017"
    networks:
      app-network:
        ipv4_address: 173.17.0.7
    command: [ "--shardsvr", "--replSet", "rs-shard2", "--bind_ip_all", "--port", "27017" ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s
  mongodb-shard2-replica1:
    image: mongo:latest
    container_name: mongodb-shard2-replica1
    restart: always
    ports:
      - "27218:27018"
    networks:
      app-network:
        ipv4_address: 173.17.0.6
    command: [ "--shardsvr", "--replSet", "rs-shard2", "--bind_ip_all", "--port", "27018" ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  mongodb-shard2-replica2:
    image: mongo:latest
    container_name: mongodb-shard2-replica2
    restart: always
    ports:
      - "27219:27019"
    networks:
      app-network:
        ipv4_address: 173.17.0.5
    command: [ "--shardsvr", "--replSet", "rs-shard2", "--bind_ip_all", "--port", "27019" ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

networks:
  app-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 173.17.0.0/16

volumes:
  configSrv:
  configSrv2:
  mongos_router:
  mongos_router2:

  mongodb-shard1-master-data:
  mongodb-shard1-replica1-data:
  mongodb-shard1-replica2-data:

  mongodb-shard2-master-data:
  mongodb-shard2-replica1-data:
  mongodb-shard2-replica2-data:
